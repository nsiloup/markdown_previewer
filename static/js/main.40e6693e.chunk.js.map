{"version":3,"sources":["Helpers/returnStufs.js","Assets/perse2.png","Components/MarkdownPrev.jsx","Helpers/repo.js","actionsNconstants/ConstantsActions.js","ReactReduxBridge/MarkdownContatiner.js","App.js","reportWebVitals.js","Reducers/changeLayout.js","Reducers/rootReducers.js","store.js","index.js"],"names":["isMobileView","window","innerWidth","console","log","resizeFuncObj","edges","top","left","bottom","right","listeners","move","event","target","dataset","x","y","parseFloat","deltaRect","Object","assign","style","width","rect","height","transform","obsFunction","editor","document","querySelector","preview","setProperty","ResizeObserver","entries","observer","entry","borderBoxSize","edSize","inlineSize","blockSize","calc","contentRect","observe","MarkdownPrev","props","componentDidMount","state","input","handleChange","bind","clearEd","fullPrev","fullEd","splitView","this","setState","value","toFullPrev","layoutProps","toFullEditor","toBothViews","edCalc","prevCalc","interact","resizable","className","onClick","class","src","persePic","alt","id","onChange","edWidth","edHeight","dangerouslySetInnerHTML","mrkInput","markdFunc","marked","setOptions","breaks","tables","highlight","code","Prism","languages","javascript","__html","DOMPurify","sanitize","getMrkDwn","prevWidth","prevHeight","React","Component","FULL_EDTIOR","FULL_PREVIEW","BOTH_VIEWS","halfCalc","Container","connect","changeLayoutReducer","dispatch","type","payload","message","obj","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40e6693e.chunk.js","sourcesContent":["\r\nexport let isMobileView = () =>{\r\n    if(window.innerWidth <= 768) {\r\n        return true\r\n    }else{\r\n        return false\r\n    };\r\n};isMobileView()\r\nconsole.log(\"mobileView ? : \", isMobileView())\r\nexport let resizeFuncObj = (/*corners*/) =>{\r\n    let returnEdges =()=>{\r\n        let edges = {}\r\n        if(isMobileView() === true){\r\n            edges = {top: false, left: false, bottom: false, right: false}\r\n        }else{\r\n            edges = { top: false, left: false, bottom: false, right: true }\r\n        }\r\n        return edges\r\n    };\r\n    let obj = {\r\n        edges : {...returnEdges()},\r\n        listeners: {\r\n            move: function (event) {\r\n            let { x, y } = event.target.dataset\r\n    \r\n            x = (parseFloat(x) || 0) + event.deltaRect.left\r\n            y = (parseFloat(y) || 0) + event.deltaRect.top\r\n    \r\n            Object.assign(event.target.style, {\r\n                width: `${event.rect.width}px`,\r\n                height: `${event.rect.height}px`,\r\n                transform: `translate(${x}px, ${y}px)`\r\n            })\r\n    \r\n            Object.assign(event.target.dataset, { x, y })\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n        \r\n};\r\n\r\n\r\nexport let obsFunction =()=>{\r\n    let editor  = document.querySelector('.edit');\r\n    let preview = document.querySelector('.prev');\r\n    editor.style.setProperty('boxe-sizing', 'borderBox');\r\n    /*editor.style.width = \"50vw\";\r\n    preview.style.width = \"50vw\";*/\r\n    if('ResizeObserver' in window) {\r\n\r\n        let callback = (entries, observer) =>{\r\n            for (let entry of entries){\r\n                //console.log(\"App is :\", entries)\r\n                if(\"borderBoxSize\" in entries[0]){//method for  THE BROWSERS that supports the \"borderBoxSize\" \r\n                    let rect = entry.borderBoxSize;\r\n                    let edSize = {\r\n                        width : rect[0].inlineSize,\r\n                        height : rect[0].blockSize\r\n                    };\r\n                    let edWidth = edSize.width;\r\n                    //let edHeight = edSize.height;\r\n                    let calc = `calc(100vw - ${edWidth}px)`\r\n                    preview.style.setProperty('width', calc);\r\n                }else if((\"borderBoxSize\" in entries[0] ===false) && (\"contentRect\" in entries[0] ===true )){// for the BROWSERS that don't support the \"borderBoxSize\" method, i had to includ the border manualy in the contentRect\r\n\r\n                    let rect = entry.contentRect;\r\n                    let edSize = {\r\n                        width : rect.width,\r\n                        height : rect.height\r\n                    };\r\n                    let edWidth = edSize.width;\r\n                    let editorBorder = `20px`;// the width of the border of the editor, must be the same as the width defined in the CSS\r\n                    let calc = `calc(100vw - ${edWidth}px) + ${editorBorder}`\r\n                    preview.style.setProperty('width', calc);\r\n                        \r\n                }\r\n\r\n            };\r\n        };\r\n        let ro = new ResizeObserver(callback);\r\n        ro.observe(editor);\r\n        //ro.observe(app)\r\n    };\r\n};\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/perse2.41d14e9f.png\";","import React from 'react';\r\nimport marked from 'marked';\r\nimport Prism from \"prismjs\";\r\nimport DOMPurify from 'dompurify';\r\nimport interact from 'interactjs';\r\nimport { resizeFuncObj, obsFunction/*getSize*/ } from '../Helpers/returnStufs';\r\nimport { edInput } from '../Helpers/repo';\r\nimport persePic from \"../Assets/perse2.png\";\r\n\r\nclass MarkdownPrev extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            input : edInput,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.clearEd = this.clearEd.bind(this);\r\n        this.fullPrev = this.fullPrev.bind(this);\r\n        this.fullEd = this.fullEd.bind(this);\r\n        this.splitView = this.splitView.bind(this);\r\n\r\n\r\n    };\r\n    handleChange(event){\r\n        this.setState({\r\n            input : event.target.value\r\n        })\r\n    }\r\n    \r\n    clearEd(){\r\n        this.setState({\r\n            input : ``,\r\n        });\r\n        console.log(\"The Editor was cleared successfully !\")\r\n    };\r\n\r\n    fullPrev(){\r\n        this.props.toFullPrev(this.props.layoutProps);\r\n    };\r\n    fullEd(){\r\n        this.props.toFullEditor(this.props.layoutProps);\r\n    };\r\n    splitView(){\r\n        this.props.toBothViews(this.props.layoutProps);\r\n        obsFunction()\r\n    };\r\n    componentDidMount = () =>{\r\n        obsFunction()\r\n    };\r\n    render(){\r\n        console.log(\"props : \", this.props)\r\n        let {edCalc, prevCalc} = this.props.layoutProps;\r\n        console.log(edCalc, prevCalc);\r\n\r\n\r\n        //Markdown part Begins\r\n        let { input } = this.state;\r\n\r\n        let getMrkDwn = (mrkInput) =>{\r\n            let markdFunc = marked(mrkInput,\r\n                [\r\n                    marked.setOptions({\r\n\r\n                        breaks: true,\r\n                        tables : true,\r\n                        highlight: function (code) {\r\n                            return Prism.highlight(code, Prism.languages.javascript, 'javascript');\r\n                        }                        \r\n                    }),\r\n                    \r\n                ]\r\n                /*option */)\r\n                let cleaned = DOMPurify.sanitize(markdFunc);\r\n            return { __html : /*markdFunc*/cleaned}\r\n        };\r\n        //Markdown part END\r\n\r\n        //INTERACTJS PART START\r\n\r\n            //RESIING THE EDITOR\r\n        interact('.edit').resizable(resizeFuncObj())\r\n            //RESISING THE PREVIEW\r\n        interact('.prev').resizable(resizeFuncObj())\r\n        //INTERACTJS PART ENDS\r\n\r\n        return(\r\n            <div className=\"app-container\">\r\n                <header>\r\n                    <div className=\"left-side\">\r\n                        <button onClick={this.clearEd} className=\"buttons\">{<i class=\"fas fa-eraser\"></i>} Clear Editor</button>\r\n                        <button onClick={this.fullEd} className=\"editorOnly buttons\">{<i class=\"fas fa-pen-square\"></i>} Editor</button>\r\n                        <button onClick={this.fullPrev} className=\"previewOnly buttons\">{<i class=\"fas fa-pager\"></i>} Preview</button>\r\n                        <button onClick={this.splitView} className=\"splitView buttons\">{<i class=\"fas fa-columns\"></i>} Split View</button>\r\n                    </div>\r\n                    <div className=\"right-side\">\r\n                        <div className=\"img-container\">\r\n                            <img src={persePic} alt=\"Perseverance Nsilou\" className=\"my-pic\"/>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"mark-container\">\r\n                    <textarea id=\"editor\" onChange={this.handleChange} value={input} className=\"edit\" style={{width:`${edCalc.edWidth}`, height:`${edCalc.edHeight}`}}/>\r\n                    <div dangerouslySetInnerHTML = {getMrkDwn(input)} id=\"preview\" className=\"prev\" style={{width:`${prevCalc.prevWidth}`, height:`${prevCalc.prevHeight}`}} />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    };\r\n};\r\n\r\nexport default MarkdownPrev;\r\n\r\n","export let edInput =  `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![Some Programming Languages](https://gowithcode.com/wp-content/uploads/2021/04/top-programming-languages.jpg)\n`;","import { isMobileView } from \"../Helpers/returnStufs\"\nexport let CLEAR_EDITOR = \"CLEAR_EDITOR\";\nexport let FULL_EDTIOR = \"FULL_EDTIOR\";\nexport let FULL_PREVIEW = \"FULL_PREVIEW\";\nexport let BOTH_VIEWS = \"BOTH_VIEWS\";\n\nlet calc = `calc(100vh - (25px + 3.2vw))`;\nlet halfCalc = `calc((100vh - (25px + 3.2vw))/2)`;\nexport let clearEditor = ()=>{\n    return {\n        type : CLEAR_EDITOR,\n        playload : {edInput : \"\"}\n    };\n};\n\nexport let expandEditor = () =>{\n    return{\n        type : FULL_EDTIOR,\n        payload : {\n            edCalc  :{\n                edWidth : `100vw`,\n                edHeight : `${calc}`\n            },\n            prevCalc  :{\n                prevWidth : `0vw`,\n                prevHeight : `0%`\n            },\n            message : \"Editor View Only\"\n        },\n    }\n};\n\nexport let expandPreview = ()=>{\n    return{\n        type : FULL_PREVIEW,\n        payload : {\n            edCalc  :{\n                edWidth : `0vw`,\n                edHeight : `0%`\n            },\n            prevCalc  :{\n                prevWidth : `100vw`,\n                prevHeight : `${calc}`\n            },\n            message : \"Previeww View Only\"\n        },\n    };\n};\n\nexport let splitView = () =>{\n    let obj ={}\nif( isMobileView === true) {\n    obj = {\n        edCalc  :{\n            edWidth : `100vw`,\n            edHeight : `${halfCalc}`\n        },\n        prevCalc  :{\n            prevWidth : `100vw`,\n            prevHeight : `${halfCalc}`\n        }\n    }\n}else{\n    obj = {\n        edCalc  :{\n            edWidth : `50vw`,\n            edHeight : `100%`\n        },\n        prevCalc  :{\n            prevWidth : `50vw`,\n            prevHeight : `100%`\n        }\n    }\n};\n    return {\n        type :  BOTH_VIEWS,\n        payload : { ...obj\n            /*edCalc  :{\n                edWidth : `50vw`,\n                edHeight : `${halfCalc}`\n            },\n            prevCalc  :{\n                prevWidth : `50vw`,\n                prevHeight : `${halfCalc}`\n            }*/,\n\n            message : \"Split View View\"\n        },\n    };\n};\n","import { connect } from \"react-redux\";\nimport MarkdownPrev from \"../Components/MarkdownPrev\";\nimport { expandPreview, expandEditor, splitView} from '../actionsNconstants/ConstantsActions';\n\n\n\n\nlet mapStateToProps = (state)=>{\n    return {\n        layoutProps : state.changeLayoutReducer.layoutProps\n    };\n};\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        toFullPrev : () =>{\n            dispatch(expandPreview())\n        },\n        toFullEditor : ()=>{\n            dispatch(expandEditor())\n        },\n        toBothViews : ()=>{\n            dispatch(splitView())\n        }\n    }\n};\nlet  Container = connect(mapStateToProps, mapDispatchToProps)(MarkdownPrev);\n\nexport default Container; ","import \"./Styles/MainStyles/App.css\"\r\nimport Container from \"./ReactReduxBridge/MarkdownContatiner\"\r\n\r\nlet App = () => {\r\n  return(\r\n    <div>\r\n      <Container />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { BOTH_VIEWS, FULL_EDTIOR, FULL_PREVIEW } from \"../actionsNconstants/ConstantsActions\";\n\nlet obj = {layoutProps :{\n    edCalc  :{\n        edWidth : `50vw`,\n        edHeight : `auto`\n    },\n    prevCalc  :{\n        prevWidth : `50vw`,\n        prevHeight : `auto`\n    },\nmessage : \"Default View\"\n}}\nlet initState = obj;\n\nlet changeLayoutReducer = (state = initState, action) => {\n    switch(action.type) {\n        case FULL_PREVIEW :\n            console.log(action.payload.message)\n            return {\n                ...state,\n                layoutProps : action.payload\n            };\n        case FULL_EDTIOR : \n        console.log(action.payload.message)\n            return {\n                ...initState,\n                layoutProps : action.payload\n            };\n        case BOTH_VIEWS : \n        console.log(action.payload.message)\n            return {\n                ...initState,\n                layoutProps : action.payload\n            }\n        default :\n            return state;\n    }\n};\n\nexport default changeLayoutReducer;","import { combineReducers } from \"redux\";\nimport changeLayoutReducer from \"./changeLayout\";\n\nlet rootReducer =combineReducers({changeLayoutReducer});\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers/rootReducers\";\n\nlet store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n\nconsole.log(store.getState());","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./store\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>, \r\n  document.getElementById(\"root\"))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}